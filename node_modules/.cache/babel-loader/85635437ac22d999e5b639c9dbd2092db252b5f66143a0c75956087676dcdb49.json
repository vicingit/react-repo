{"ast":null,"code":"var _jsxFileName = \"/home/senor/projects/React/boxes/src/App.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport boxes from './boxes';\nimport Box from './Box';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App(props) {\n  _s();\n  const [squares, setSquares] = React.useState(boxes);\n  function toggle(id) {\n    setSquares(prevSquares => {\n      const newSquares = [];\n      for (let i = 0; i < prevSquares.length; i++) {\n        const currentSquare = prevSquares[i];\n        if (currentSquare.id === id) {\n          const updatedSquare = {\n            ...currentSquare,\n            on: !currentSquare.on\n          };\n          newSquares.push(updatedSquare);\n        } else {\n          newSquares.push(currentSquare);\n        }\n      }\n    });\n  }\n  const squareElements = squares.map(square => /*#__PURE__*/_jsxDEV(Box, {\n    id: square.id,\n    on: square.on,\n    toggle: toggle\n  }, square.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: squareElements\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"lSYxk2ImfL+cMGSwL8U+G7EHn3o=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","boxes","Box","jsxDEV","_jsxDEV","App","props","_s","squares","setSquares","useState","toggle","id","prevSquares","newSquares","i","length","currentSquare","updatedSquare","on","push","squareElements","map","square","fileName","_jsxFileName","lineNumber","columnNumber","children","_c","$RefreshReg$"],"sources":["/home/senor/projects/React/boxes/src/App.js"],"sourcesContent":["import React from 'react'\nimport boxes from './boxes'\nimport Box from './Box';\nimport './styles.css'; \n\nexport default function App(props) {\n\n    const [squares, setSquares] = React.useState(boxes)\n\n    function toggle(id){\n        setSquares(prevSquares => {\n            const newSquares = []\n            for(let i = 0; i < prevSquares.length; i++){\n                const currentSquare = prevSquares[i]\n                if(currentSquare.id === id){\n                    const updatedSquare = {\n                        ...currentSquare,\n                        on: !currentSquare.on\n                    }\n                    newSquares.push(updatedSquare)\n                }else{\n                    newSquares.push(currentSquare)\n                }\n            }\n        })\n    }\n\n    const squareElements = squares.map(square => (\n        <Box \n        key={square.id} \n        id={square.id}\n        on={square.on} \n        toggle={toggle}\n        />\n    ))\n\n    return (\n    <main>\n        {squareElements}\n    </main>\n  )\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,eAAe,SAASC,GAAGA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAE/B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,KAAK,CAACU,QAAQ,CAACT,KAAK,CAAC;EAEnD,SAASU,MAAMA,CAACC,EAAE,EAAC;IACfH,UAAU,CAACI,WAAW,IAAI;MACtB,MAAMC,UAAU,GAAG,EAAE;MACrB,KAAI,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,WAAW,CAACG,MAAM,EAAED,CAAC,EAAE,EAAC;QACvC,MAAME,aAAa,GAAGJ,WAAW,CAACE,CAAC,CAAC;QACpC,IAAGE,aAAa,CAACL,EAAE,KAAKA,EAAE,EAAC;UACvB,MAAMM,aAAa,GAAG;YAClB,GAAGD,aAAa;YAChBE,EAAE,EAAE,CAACF,aAAa,CAACE;UACvB,CAAC;UACDL,UAAU,CAACM,IAAI,CAACF,aAAa,CAAC;QAClC,CAAC,MAAI;UACDJ,UAAU,CAACM,IAAI,CAACH,aAAa,CAAC;QAClC;MACJ;IACJ,CAAC,CAAC;EACN;EAEA,MAAMI,cAAc,GAAGb,OAAO,CAACc,GAAG,CAACC,MAAM,iBACrCnB,OAAA,CAACF,GAAG;IAEJU,EAAE,EAAEW,MAAM,CAACX,EAAG;IACdO,EAAE,EAAEI,MAAM,CAACJ,EAAG;IACdR,MAAM,EAAEA;EAAO,GAHVY,MAAM,CAACX,EAAE;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAIb,CACJ,CAAC;EAEF,oBACAvB,OAAA;IAAAwB,QAAA,EACKP;EAAc;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACb,CAAC;AAEX;AAACpB,EAAA,CApCuBF,GAAG;AAAAwB,EAAA,GAAHxB,GAAG;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}